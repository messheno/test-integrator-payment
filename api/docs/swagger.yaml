basePath: /
definitions:
  models.ErrorAPI:
    properties:
      code:
        type: string
      data: {}
      message:
        type: string
    type: object
  models.PaginationModel:
    properties:
      count:
        type: integer
      limit:
        type: integer
      offset:
        type: integer
      page:
        type: integer
      page_count:
        type: integer
      query:
        type: string
      sorts:
        items:
          type: string
        type: array
    type: object
  models.ProviderModel:
    properties:
      asynchrone_mode:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      health_url:
        type: string
      id:
        type: string
      name:
        type: string
      name_slug:
        type: string
      pay_check_url:
        type: string
      pay_url:
        type: string
      support_country:
        description: CIV
        items:
          type: string
        type: array
      transactions:
        items:
          $ref: '#/definitions/models.TransactionModel'
        type: array
      updated_at:
        type: string
    required:
    - description
    - health_url
    - name
    - pay_check_url
    - pay_url
    - support_country
    type: object
  models.ResFailure:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ErrorAPI'
        type: array
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  models.ServiceModel:
    properties:
      amount:
        type: number
      country:
        type: string
      created_at:
        type: string
      current_amount:
        type: number
      description:
        type: string
      id:
        type: string
      logo:
        type: string
      name:
        type: string
      name_slug:
        type: string
      permissions:
        description: Liste de permission des utilisateurs
        items:
          $ref: '#/definitions/models.ServicePermissionModel'
        type: array
      site_web:
        type: string
      transactions:
        description: Liste des transaction
        items:
          $ref: '#/definitions/models.TransactionModel'
        type: array
      updated_at:
        type: string
    required:
    - description
    - name
    type: object
  models.ServicePermissionModel:
    properties:
      created_at:
        type: string
      id:
        type: string
      role:
        type: integer
      service:
        $ref: '#/definitions/models.ServiceModel'
      service_id:
        description: Service
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.UserModel'
      user_id:
        description: User
        type: string
    required:
    - role
    type: object
  models.TransactionModel:
    properties:
      amount:
        type: number
      amount_with_fee:
        type: number
      created_at:
        type: string
      currency:
        type: string
      id:
        type: string
      mode_live:
        type: boolean
      operation_mode:
        description: CREDIT, DEBIT
        type: string
      operation_msg:
        type: string
      operation_state:
        description: PENDING, SUCCESS, CANCEL, FAIL
        type: string
      provider:
        $ref: '#/definitions/models.ProviderModel'
      provider_id:
        description: Provider
        type: string
      reference_id:
        description: RÃ©ference
        type: string
      service:
        $ref: '#/definitions/models.ServiceModel'
      service_id:
        description: Service
        type: string
      updated_at:
        type: string
    required:
    - amount
    - amount_with_fee
    - currency
    - operation_mode
    - operation_state
    - provider
    - provider_id
    - reference_id
    - service
    - service_id
    type: object
  models.UserModel:
    properties:
      auth_id:
        description: Identifiant unique keycloak
        type: string
      country:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        description: Information
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      phone_prefix:
        type: string
      role:
        description: Role
        type: integer
      service_permissions:
        items:
          $ref: '#/definitions/models.ServicePermissionModel'
        type: array
      updated_at:
        type: string
    required:
    - auth_id
    - first_name
    - last_name
    type: object
  services.ResServiceAPICreateSuccess:
    properties:
      data:
        properties:
          service:
            $ref: '#/definitions/models.ServiceModel'
          user:
            $ref: '#/definitions/models.UserModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  services.ResServiceAPIDeleteSuccess:
    properties:
      data:
        properties:
          deleted:
            type: boolean
          service:
            $ref: '#/definitions/models.ServiceModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  services.ResServiceAPIFetchSuccess:
    properties:
      data:
        properties:
          pagination:
            $ref: '#/definitions/models.PaginationModel'
          services:
            items:
              $ref: '#/definitions/models.ServiceModel'
            type: array
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  services.ResServiceAPIGenClientSuccess:
    properties:
      data:
        properties:
          client_id:
            type: string
          client_key:
            type: string
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  services.ResServiceAPIGetClientSuccess:
    properties:
      data:
        properties:
          client_id:
            type: string
          client_key:
            type: string
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  services.ResServiceAPIGetSuccess:
    properties:
      data:
        properties:
          service:
            $ref: '#/definitions/models.ServiceModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  services.ResServiceAPIUpdateSuccess:
    properties:
      data:
        properties:
          service:
            $ref: '#/definitions/models.ServiceModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  services.ResServicePermissionAPIAddSuccess:
    properties:
      data:
        properties:
          service:
            $ref: '#/definitions/models.ServiceModel'
          servive_permission:
            $ref: '#/definitions/models.ServicePermissionModel'
          user:
            $ref: '#/definitions/models.UserModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  services.ResServicePermissionAPIFetchSuccess:
    properties:
      data:
        properties:
          service_permissions:
            items:
              $ref: '#/definitions/models.ServicePermissionModel'
            type: array
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  transactions.ResServiceAPICreateSuccess:
    properties:
      data:
        properties:
          service:
            $ref: '#/definitions/models.ServiceModel'
          user:
            $ref: '#/definitions/models.UserModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  transactions.ResServiceAPIDeleteSuccess:
    properties:
      data:
        properties:
          deleted:
            type: boolean
          service:
            $ref: '#/definitions/models.ServiceModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  transactions.ResServiceAPIGenClientSuccess:
    properties:
      data:
        properties:
          client_id:
            type: string
          client_key:
            type: string
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  transactions.ResServiceAPIGetSuccess:
    properties:
      data:
        properties:
          service:
            $ref: '#/definitions/models.ServiceModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  transactions.ResServiceAPIUpdateSuccess:
    properties:
      data:
        properties:
          service:
            $ref: '#/definitions/models.ServiceModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  transactions.ResServicePermissionAPIAddSuccess:
    properties:
      data:
        properties:
          service:
            $ref: '#/definitions/models.ServiceModel'
          servive_permission:
            $ref: '#/definitions/models.ServicePermissionModel'
          user:
            $ref: '#/definitions/models.UserModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  transactions.ResServicePermissionAPIFetchSuccess:
    properties:
      data:
        properties:
          service_permissions:
            items:
              $ref: '#/definitions/models.ServicePermissionModel'
            type: array
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  transactions.ResTransactionAPIFetchSuccess:
    properties:
      data:
        properties:
          pagination:
            $ref: '#/definitions/models.PaginationModel'
          transactions:
            items:
              $ref: '#/definitions/models.TransactionModel'
            type: array
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  transactions.ResTransactionAPIGetClientSuccess:
    properties:
      data:
        properties:
          client_id:
            type: string
          client_key:
            type: string
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  users.ResUserAPICreateSuccess:
    properties:
      data:
        properties:
          refresh_token:
            type: string
          token:
            type: string
          user:
            $ref: '#/definitions/models.UserModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  users.ResUserAPIFetchSuccess:
    properties:
      data:
        properties:
          pagination:
            $ref: '#/definitions/models.PaginationModel'
          users:
            items:
              $ref: '#/definitions/models.UserModel'
            type: array
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  users.ResUserAPIGetSuccess:
    properties:
      data:
        properties:
          user:
            $ref: '#/definitions/models.UserModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  users.ResUserAPILoginSuccess:
    properties:
      data:
        properties:
          refresh_token:
            type: string
          token:
            type: string
          user:
            $ref: '#/definitions/models.UserModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  users.ResUserAPIRoleSuccess:
    properties:
      data:
        properties:
          new_role:
            type: string
          user:
            $ref: '#/definitions/models.UserModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
  users.ResUserAPIUpdateSuccess:
    properties:
      data:
        properties:
          user:
            $ref: '#/definitions/models.UserModel'
        type: object
      is_error:
        type: boolean
      message:
        type: string
      request_date:
        type: string
      status:
        type: integer
      time_elapsed:
        type: string
    type: object
host: spay.sikem.ci
info:
  contact:
    email: support@sikem.ci
    name: API Support
    url: http://www.sikem.ci/support
  description: API de paiement.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://www.sikem.ci/terms/
  title: Sikem Payment API
  version: 0.0.2
paths:
  /api/services/:
    get:
      description: RÃ©cuperation des boutiques paginer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.ResUserAPIFetchSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Fetch all service paginate
      tags:
      - Users
    post:
      consumes:
      - application/json
      - text/xml
      - application/x-www-form-urlencoded
      - multipart/form-data
      description: CrÃ©ation d'un nouvel utilisateur
      parameters:
      - description: Id d'authentification de l'admin de la boutique
        in: formData
        name: auth_id
        type: string
      - description: 'Pays (ex: civ)'
        in: formData
        name: country
        type: string
      - description: Une courte description de la boutiuque
        in: formData
        name: description
        required: true
        type: string
      - description: Nom de la boutique
        in: formData
        name: name
        required: true
        type: string
      - description: 'Site web (ex: https://www.maboutique.ci)'
        in: formData
        name: site_web
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ResServiceAPICreateSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Add new service
      tags:
      - Services
  /api/services/:id/:
    delete:
      description: Suppression de la boutique
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ResServiceAPIDeleteSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Delete service
      tags:
      - Services
    get:
      description: RÃ©cuperation des informations de la boutique
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ResServiceAPIGetSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Get service data
      tags:
      - Services
    put:
      consumes:
      - application/json
      - text/xml
      - application/x-www-form-urlencoded
      - multipart/form-data
      description: Mise Ã  jour des donnÃ©es de la boutique
      parameters:
      - description: 'Pays (ex: civ)'
        in: formData
        name: country
        type: string
      - description: Une courte description de la boutiuque
        in: formData
        name: description
        type: string
      - description: Nom de la boutique
        in: formData
        name: name
        type: string
      - description: 'Site web (ex: https://www.maboutique.ci)'
        in: formData
        name: site_web
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ResServiceAPIUpdateSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: UpdateInfo service information
      tags:
      - Services
  /api/services/:id/permissions/:
    get:
      description: RÃ©cuperation des permissions de la boutique
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ResServicePermissionAPIFetchSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Fetch service permissions
      tags:
      - Service Permissions
  /api/services/:id/permissions/add:
    post:
      description: RÃ©cuperation des permissions de la boutique
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ResServicePermissionAPIAddSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Add user to service
      tags:
      - Ajout d'un utilisateurs Ã  la boutique
  /api/services/:id/regenerate-client:
    post:
      description: RÃ©gÃ©neration du client de la boutique
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ResServiceAPIGenClientSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Regeneration Client service data
      tags:
      - Services
  /api/services/:id/show-client:
    get:
      description: RÃ©cuperation des informations client de la boutique
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ResTransactionAPIGetClientSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Get Client service data
      tags:
      - Services
  /api/transactions/:
    get:
      description: RÃ©cuperation des transactions paginer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ResTransactionAPIFetchSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Fetch all transaction paginate
      tags:
      - Transactions
  /api/users/:
    post:
      consumes:
      - application/json
      - text/xml
      - application/x-www-form-urlencoded
      - multipart/form-data
      description: CrÃ©ation d'un nouvel utilisateur
      parameters:
      - description: 'Pays (ex: civ)'
        in: formData
        name: country
        type: string
      - description: Adresse e-mail valide
        in: formData
        name: email
        type: string
      - description: PrÃ©noms
        in: formData
        name: first_name
        required: true
        type: string
      - description: Nom
        in: formData
        name: last_name
        required: true
        type: string
      - description: Mot de passe
        in: formData
        maxLength: 18
        minLength: 4
        name: password
        required: true
        type: string
      - description: Confirmation du mot de passe
        in: formData
        name: password_confirmation
        required: true
        type: string
      - description: NumÃ©ro de mobile
        in: formData
        name: phone_number
        required: true
        type: string
      - description: 'Prefix tÃ©lÃ©phonique (ex: 225)'
        in: formData
        name: phone_prefix
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.ResUserAPICreateSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Add new user
      tags:
      - Users
  /api/users/:id:
    get:
      description: RÃ©cuperation des informations de l'utilisateur
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.ResUserAPIGetSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Get user data
      tags:
      - Users
    put:
      consumes:
      - application/json
      - text/xml
      - application/x-www-form-urlencoded
      - multipart/form-data
      description: Mise Ã  jour des donnÃ©es de l'utilisateur
      parameters:
      - description: Appliquer la mise Ã  jour au systÃ¨me complet
        in: formData
        name: apply_for_all_system
        type: boolean
      - description: 'Pays (ex: civ)'
        in: formData
        name: country
        type: string
      - description: Adresse e-mail valide
        in: formData
        name: email
        type: string
      - description: PrÃ©noms
        in: formData
        name: first_name
        type: string
      - description: Nom
        in: formData
        name: last_name
        type: string
      - description: NumÃ©ro de mobile
        in: formData
        name: phone_number
        type: string
      - description: 'Prefix tÃ©lÃ©phonique (ex: 225)'
        in: formData
        name: phone_prefix
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.ResUserAPIUpdateSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: UpdateInfo user information
      tags:
      - Users
  /api/users/change-role:
    post:
      consumes:
      - application/json
      - text/xml
      - application/x-www-form-urlencoded
      - multipart/form-data
      description: Changement de la permission de l'utilisateur
      parameters:
      - description: Identifiant de connexion de l'utilisateur
        in: formData
        name: auth_id
        required: true
        type: string
      - description: '0: Merchant, 1: Manager, 2: Admin'
        in: formData
        maximum: 2
        minimum: 0
        name: role
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.ResUserAPIRoleSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      security:
      - ApiKeyAuth: []
      summary: Change user role
      tags:
      - Users
  /api/users/login:
    post:
      consumes:
      - application/json
      - text/xml
      - application/x-www-form-urlencoded
      - multipart/form-data
      description: Connexion d'un utilisateur
      parameters:
      - description: Mot de passe
        in: formData
        maxLength: 18
        minLength: 4
        name: password
        required: true
        type: string
      - description: User name
        in: formData
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.ResUserAPILoginSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResFailure'
      summary: Login user
      tags:
      - Users
securityDefinitions:
  "":
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
